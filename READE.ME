
POUR LE BACKEND :

cd backend

# venv Python
python -m venv .venv
# mac/linux:
source .venv/bin/activate
# windows:
# .venv\Scripts\activate

# dÃ©pendances
pip install django djangorestframework djangorestframework-simplejwt django-cors-headers mysqlclient python-dotenv
pip freeze > requirements.txt

# projet + app
django-admin startproject gestion .
python manage.py startapp accounts

structure du projet 

backend/
â”‚â”€â”€ gestion/              # dossier principal du projet
â”‚   â”œâ”€â”€ __init__.py
â”‚   â”œâ”€â”€ asgi.py
â”‚   â”œâ”€â”€ settings.py
â”‚   â”œâ”€â”€ urls.py
â”‚   â””â”€â”€ wsgi.py
â”‚â”€â”€ accounts/             # app pour gÃ©rer les utilisateurs
â”‚   â”œâ”€â”€ migrations/
â”‚   â”œâ”€â”€ __init__.py
â”‚   â”œâ”€â”€ admin.py
â”‚   â”œâ”€â”€ apps.py
â”‚   â”œâ”€â”€ models.py
â”‚   â”œâ”€â”€ tests.py
â”‚   â”œâ”€â”€ views.py
â”‚   â””â”€â”€ urls.py (tu le crÃ©eras)
â”‚â”€â”€ manage.py



j'utilise MYSQL server communuty 

dans le terminal on tap ceci pour ouvrir puis 
"C:\Program Files\MySQL\MySQL Server 8.4\bin\mysql.exe" -h 127.0.0.1 -P 3307 -u root -p
mdt : root            c'est l'utilisateur creer lors de l'installation


-- 1) Base pour ton projet
CREATE DATABASE IF NOT EXISTS gestion_bd
  CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;

-- 2) Utilisateur (compatible phpMyAdmin)
CREATE USER IF NOT EXISTS 'gestion_user'@'localhost' IDENTIFIED BY 'danis';

-- 3) Droits
GRANT ALL PRIVILEGES ON gestion_bd.* TO 'danis'@'localhost';
FLUSH PRIVILEGES;


-- 4) VÃ©rifier
SHOW DATABASES;



pour faire la migrations
1.creer les migrations 
python manage.py makemigrations

2. appliquer Ã  la base de donnÃ© 
python manage.py migrate

pour creer un utilisateur dans l'admin django

python manage.py createsuperuser
email : jacquesboussengui@gmail.com
mdp :1122
username : danis

pour lancer le serveur django
python manage.py runserver




--------------------------------------------------------------------REACT---------------------------------------------------------------
# ðŸš€ Installation et configuration de React + Tailwind v4

## 1. CrÃ©ation du projet (dÃ©jÃ  fait)
```bash
npm create vite@latest frontend -- --template react
2. Aller dans le bon dossier
bash
Copier
Modifier
cd frontend
3. Installation des dÃ©pendances
bash
Copier
Modifier
npm install
4. Installation des packages supplÃ©mentaires
bash
Copier
Modifier
npm install axios react-router-dom @tanstack/react-query
5. Installation de Tailwind CSS v4
bash
Copier
Modifier
npm install -D tailwindcss postcss autoprefixer @tailwindcss/postcss
6. CrÃ©ation du fichier postcss.config.js Ã  la racine
js
Copier
Modifier
export default {
  plugins: {
    "@tailwindcss/postcss": {},
  },
};
7. Importer Tailwind dans src/index.css
css
Copier
Modifier
@import "tailwindcss";
8. VÃ©rifier que src/main.jsx importe bien le CSS global
jsx
Copier
Modifier
import "./index.css";
9. Lancer le serveur de dÃ©veloppement
bash
Copier
Modifier
npm run dev

